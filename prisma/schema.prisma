// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String
  password  String
  role      Role     @default(USER)
  token     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id            String        @id @default(uuid())
  name          String        @unique
  image         String
  description   String
  taxApplicable Boolean
  taxNumber     Int?
  taxType       String?
  subcategories Subcategory[]
  items         Item[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
}

model Subcategory {
  id            String   @id @default(uuid())
  name          String   @unique
  image         String
  description   String
  taxApplicable Boolean
  taxNumber     Int?
  taxType       String?
  category      Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId    String
  items         Item[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Item {
  id            String       @id @default(uuid())
  name          String       @unique
  image         String
  description   String
  taxApplicable Boolean
  taxNumber     Int?
  taxType       String?
  baseCost      Float
  discount      Float
  price         Float
  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id], onDelete: Cascade)
  subcategoryId String?
  category      Category?    @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId    String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}
